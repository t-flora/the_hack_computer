// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    // All you need to select the right location are the first 3 bits, and we just don't write to addresses above 0x6000
    DMux8Way(in=load, sel=address[12..14], a=ramLoad0, b=ramLoad1, c=ramLoad2, d=ramLoad3, e=scrLoad0, f=scrLoad1, g=kbdLoad);

    // Internal pin constraints force me to do this...
    Or(a=ramLoad0, b=ramLoad1, out=ramLoad01);
    Or(a=ramLoad2, b=ramLoad3, out=ramLoad23);
    Or(a=ramLoad01, b=ramLoad23, out=ramLoad);
    RAM16K(in=in, load=ramLoad, address=address[0..13], out=ramOut);

    Or(a=scrLoad0, b=scrLoad1, out=scrLoad);
    Screen(in=in, load=scrLoad, address=address[0..12], out=scrOut);

    Keyboard(out=kbdOut);

    Mux8Way16(a=ramOut, b=ramOut, c=ramOut, d=ramOut, e=scrOut, f=scrOut, g=kbdOut, sel=address[12..14], out=out);
}
